{
  "name": "browser-run",
  "description": "Transform stream that executes JavaScript it receives in a real browser and outputs console output",
  "version": "0.0.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/browser-run.git"
  },
  "homepage": "https://github.com/juliangruber/browser-run",
  "main": "index.js",
  "bin": {
    "browser-run": "./bin/bin.js"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "dependencies": {
    "duplexer": "0.0.3",
    "through": "~2.2.7",
    "browserify": "~2.7.2",
    "phantomjs": "1.8.1-3",
    "optimist": "~0.3.5",
    "xhr-write-stream": "~0.1.2",
    "enstore": "~0.0.1"
  },
  "devDependencies": {
    "tap": "*"
  },
  "keywords": [
    "browser",
    "stream",
    "phantomjs",
    "test",
    "headless",
    "duplex"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "readme": "# browser-run\n\nThe easiest way of running code in a browser environment.\n\n[![Build Status](https://travis-ci.org/juliangruber/browser-run.png?branch=master)](https://travis-ci.org/juliangruber/browser-run)\n\n## Usage\n\n```bash\n$ echo \"console.log(document.location)\" | browser-run\n# => http://localhost:53227/\n```\n\nOr use `browser-run` programmatically:\n\n```js\nvar run = require('browser-run');\n\nvar browser = run();\nbrowser.pipe(process.stdout);\nbrowser.write('console.log(document.location)');\nbrowser.end();\n```\n\n## Example with browserify\n\n```bash\n$ browserify main.js | browser-run\n```\n\nor\n\n```js\nvar browserify = require('browserify');\nvar browser = require('browser-run');\n\nbrowserify('main.js').bundle().pipe(browser()).pipe(process.stdout);\n```\n\n## CLI\n\n```bash\n$ browser-run --help\nRun JavaScript in a browser.\nWrite code to stdin and receive console output on stdout.\nUsage: browser-run [OPTIONS]\n\nOptions:\n  --port, -p  Start listening on that port\n  --help, -h  Print help\n\n```\n\n## API\n\n### run([port])\n\nReturns a duplex stream and starts a webserver.\n\nIf you don't specify `port` a random port will be chosen and **phantomjs** will be pointed at\nthe server for `headless` testing.\n\nIf you speficy `port` you will have to point a browser to `\"http://localhost/\" + port`.\n\n### run#stop()\n\nStop the underlying webserver.\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install browser-run    # for library\n$ npm install -g browser-run # for cli\n```\n\n## License\n\n(MIT)\n",
  "readmeFilename": "README.md",
  "_id": "browser-run@0.0.4",
  "_from": "browser-run@"
}
